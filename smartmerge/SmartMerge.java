/**
 * author Perrine.Paul-Gilloteaux@univ-nantes.fr
 *  This plugin starts from a sequence (2D, 3D, time..) with several channels, 
 *  and create a new sequence where the channel content have been modified to help the visualization
 *  Several method of blending can be proposed, for now:
 *  - remove overlapping part (for mosaicking) from other channels
 *  
 */


package plugins.perrine.smartmerge;

import plugins.adufour.ezplug.EzPlug;
import plugins.adufour.ezplug.EzVarSequence;

import icy.image.IcyBufferedImage;

import icy.sequence.Sequence;
import icy.type.collection.array.Array1DUtil;

public class SmartMerge extends EzPlug {
  EzVarSequence inputseq=new EzVarSequence("ImageTovisualize");
	@Override
	protected void initialize() {
		addEzComponent(inputseq);
	}

	@Override
	protected void execute() {
		Sequence sequence=inputseq.getValue();
		Sequence result=new Sequence(sequence.getName() +" - SmartMerge");
		result.beginUpdate();
		try
		{
			for (int t=0;t<sequence.getSizeT();t++){
				for (int z=0;z<sequence.getSizeZ();z++){
				IcyBufferedImage image= getBlended(sequence,t,z);
				result.setImage(t, z, image);
				}
			}
		}
		finally
		{
			result.endUpdate();
		}
		for (int c=0; c<sequence.getSizeC();c++){
			result.setColormap(c, sequence.getColorMap(c));
		}
		addSequence(result);
	}

	private IcyBufferedImage getBlended(Sequence sequence, int t,int z)
	{
		
		
		IcyBufferedImage result = new IcyBufferedImage(sequence.getSizeX(),sequence.getSizeY(),sequence.getSizeC(), sequence.getDataType_());
		double[] doubleArray= new double[sequence.getSizeX()*sequence.getSizeY()];
		
		for (int c=0; c<sequence.getSizeC();c++){
			Object dataArray=sequence.getDataXY(t, z, c);
			double[] imgDoubleArray=Array1DUtil.arrayToDoubleArray(dataArray, sequence.isSignedDataType());
			for (int i=0;i<imgDoubleArray.length;i++){
				if (doubleArray[i]>0){
					doubleArray[i]=0;
				    
				}
				else{
					doubleArray[i]=imgDoubleArray[i];
				}

					
			}
			//ArrayMath.max(doubleArray,imgDoubleArray,doubleArray2);
			//ArrayMath.subtract(doubleArray2,doubleArray,doubleArray);
			Array1DUtil.doubleArrayToArray(doubleArray,result.getDataXY(c))	;	
		}
		
		result.dataChanged();
		return result;
		
	}
	
	

	@Override
	public void clean() {
		// TODO Auto-generated by Icy4Eclipse
	}
}
